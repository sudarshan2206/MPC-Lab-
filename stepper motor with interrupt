#include "main.h"
void SystemClock_Config(void); 
static void MX_GPIO_Init(void); 
uint8_t flag=0;
//Interrupt service routine to flip flag value
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 
UNUSED(GPIO_Pin);
flag=~flag;
}
int main(void)
{
HAL_Init(); 
SystemClock_Config();
MX_GPIO_Init();
while (1)
{
if(flag)
{
Step_Sequence1(); 
HAL_Delay(50); 
Step_Sequence2(); 
HAL_Delay(50); 
Step_Sequence3(); 
HAL_Delay(50); 
Step_Sequence4(); 
HAL_Delay(50);
}
else
{
Step_Sequence4(); 
HAL_Delay(50); 
Step_Sequence3(); 
HAL_Delay(50); 
Step_Sequence2(); 
HAL_Delay(50); 
Step_Sequence1(); 
HAL_Delay(50);
}
}
}
void Step_Sequence1() //0x01 -pin 12
{
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
}
void Step_Sequence2() //0x08 - Pin 15
{
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
}
void Step_Sequence3() //0x04 - Pin 13
{
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
}
void Step_Sequence4() //0x02 - Pin 14
{
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET); 
HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
}
